# Workflow to verify that all connections between containers are setup correctly.

name: "Container Connections Validation"

on:
  push:
    branches:
      - 'main'
      - 'release-*'
  pull_request:
    paths:
      - '.github/workflows/container-connections-validation.yaml'
      - '.github/actions/**'
      - 'emulation_system/**'
      - './Makefile'
  workflow_dispatch:
    inputs:
      cache-break:
        description: Break the Cache
        required: false
        default: default

jobs:
  container-connections-validation:
    runs-on: "ubuntu-20.04"
    name: Container Connections Validation
    steps:

      - name: Checkout opentrons-emulation repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}

      - name: Checkout monorepo
        uses: actions/checkout@v3
        with:
          repository: "Opentrons/opentrons"
          path: opentrons

      - name: Setup Python for opentrons repository
        uses: actions/setup-python@v4
        id: python37
        with:
          python-version: "3.7"
          cache: pipenv
          cache-dependency-path: ./opentrons/hardware/Pipfile.lock

      - name: Install Pipenv
        run: pip install pipenv==2022.3.24
        shell: bash

      - name: Setup hardware project in opentrons repository
        run: make setup
        working-directory: ./opentrons/hardware

      # Only change `main` in Opentrons/opentrons-emulation@main
      # if making changes to .github/actions or action.yaml
      - name: Setup opentrons-emulation project
        uses: Opentrons/opentrons-emulation@main
        with:
          input-file: ${PWD}/samples/common_use_cases/basic/ot3_only.yaml
          cache-break: ${{ github.event.inputs.cache-break }}
          command: setup

      # Only change `main` in Opentrons/opentrons-emulation@main
      # if making changes to .github/actions or action.yaml
      - name: Run emulated system
        uses: Opentrons/opentrons-emulation@main
        with:
          input-file: ${PWD}/samples/ot3/ot3_remote.yaml
          command: run

      - name: Run e2e tests
        run: make test-e2e
