#############################################################
#                           BASES                           #
#############################################################

# The following targets are what final image that the end user will use should be based off of

# ubuntu-base:
#   * Lowest level build target that all other targets are based off of
#   * Production targets should be based off of this to keep the images as small as possible

# cpp-base:
#   * Built on top of ubuntu-base
#   * Contains common packages that all ot3-firmware and module firmware require
#   * All firmware Development targets should be based off of this to ensure all packages required for building exist

# python-base:
#   * Will be built on top of ubuntu-base
#   * All python level emulators will be based off of python-base
#   * Will contain all packages needed for building python emulators

###############
# ubuntu-base #
###############

FROM ubuntu:20.04 as ubuntu-base
# Only need to fill out these args, in CI builds to push images to AWS ECR.
# Don't bother when you are doing manual builds. It will break your cache and your
# build will take forever

ARG TRIGGER
ARG BUILD_DATE
ARG VCS_REF
ARG VCS_URL
ARG URL
ARG VENDOR
ARG DOCKER_CMD
ARG DESCRIPTION

LABEL opentrons-emulation.trigger=$TRIGGER
LABEL opentrons-emulation.build_date=$BUILD_DATE
LABEL opentrons-emulation.vcs_ref=$VCS_REF
LABEL opentons-emulation.vcs_url=$VCS_URL
LABEL opentons-emulation.url=$URL
LABEL opentons-emulation.vendor=$VENDOR
LABEL opentons-emulation.docker_cmd=$DOCKER_CMD
LABEL opentons-emulation.description=$DESCRIPTION

ENV DEBIAN_FRONTEND noninteractive

RUN rm -rf /var/lib/apt/lists/*
RUN echo "Updating apt" && apt-get update > /dev/null
RUN apt-get update \
    && apt-get install \
       --no-install-recommends \
       -y \
      wget \
      unzip \
      software-properties-common \
      build-essential \
      curl \
      git \
      libssl-dev \
      && rm -rf /var/lib/apt/lists/*
RUN add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update && \
    apt-get install \
    	--no-install-recommends \
       	-y \
    	python3.7-venv
RUN (cd /usr/bin && ls -l python*)
RUN (cd /usr/bin/ && ln -s /usr/bin/python3.7 python)


############
# cpp-base #
############

FROM ubuntu-base as cpp-base
RUN apt-get update && \
    apt-get install \
    --no-install-recommends \
    -y \
    libgtest-dev \
    libboost-test-dev \
    gcc-10 \
    g++-10 \
    lsb-release \
    > /dev/null

RUN wget -q https://github.com/Kitware/CMake/releases/download/v3.21.2/cmake-3.21.2-linux-x86_64.tar.gz && \
    tar -zxf cmake-3.21.2-linux-x86_64.tar.gz && \
    rm cmake-3.21.2-linux-x86_64.tar.gz && \
    mv cmake-3.21.2-linux-x86_64 cmake && \
    (cd /usr/bin/ && ln -s /cmake/bin/cmake cmake)

###############
# python-base #
###############

FROM ubuntu-base as python-base

ENV NODE_VERSION 14
ENV OT_PYTHON "/usr/bin/python3.7"

RUN apt-get update && \
    apt-get install \
    --no-install-recommends \
    -y \
    pipenv \
    libudev-dev \
    libsystemd-dev \
    python3-dev \
    pkgconf \
    libpython3.7-dev

RUN python -m ensurepip --upgrade

RUN curl -fsSL https://deb.nodesource.com/setup_${NODE_VERSION}.x | bash -
RUN apt-get install -y nodejs && npm install --global yarn
